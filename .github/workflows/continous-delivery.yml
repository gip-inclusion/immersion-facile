name: "Continuous Deployment"

on:
  push:
    branches:
      - main

jobs:
  validation:
    uses: ./.github/workflows/fullcheck.yml
    secrets:
      API_KEY_OPEN_CAGE_DATA_GEOCODING: ${{ secrets.API_KEY_OPEN_CAGE_DATA_GEOCODING }}
      API_KEY_OPEN_CAGE_DATA_GEOSEARCH: ${{ secrets.API_KEY_OPEN_CAGE_DATA_GEOSEARCH }}
      IC_ADMIN_PASSWORD: ${{ secrets.IC_ADMIN_PASSWORD }}
      IC_PASSWORD: ${{ secrets.IC_PASSWORD }}
      IC_USERNAME: ${{ secrets.IC_USERNAME }}
      INCLUSION_CONNECT_CLIENT_SECRET: ${{ secrets.INCLUSION_CONNECT_CLIENT_SECRET }}
      PC_USERNAME: ${{ secrets.PC_USERNAME }}
      PC_PASSWORD: ${{ secrets.PC_PASSWORD }}
      PC_ADMIN_PASSWORD: ${{ secrets.PC_ADMIN_PASSWORD }}
      PRO_CONNECT_CLIENT_SECRET: ${{ secrets.PRO_CONNECT_CLIENT_SECRET}}
      SIRENE_INSEE_CLIENT_ID: ${{ secrets.SIRENE_INSEE_CLIENT_ID }}
      SIRENE_INSEE_CLIENT_SECRET: ${{ secrets.SIRENE_INSEE_CLIENT_SECRET }}
      SIRENE_INSEE_USERNAME: ${{ secrets.SIRENE_INSEE_USERNAME }}
      SIRENE_INSEE_PASSWORD: ${{ secrets.SIRENE_INSEE_PASSWORD }}

  build-front-artefact:
    uses: ./.github/workflows/build-front-artefact.yml
    with:
      tag: "v${{ github.run_number }}"
    secrets:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

  build-back-artefact:
    uses: ./.github/workflows/build-back-artefact.yml
    with:
      tag: "v${{ github.run_number }}"

  tag:
    name: "Tag"
    uses: ./.github/workflows/ci-add-tag.yml
    with:
      tag: "v${{ github.run_number }}"

  create-wip-pre-release:
    needs:
      - tag
    name: Create pre-release
    uses: ./.github/workflows/generate-release.yml
    with:
      release_tag: "v${{ github.run_number }}-rc"
      prerelease: true

  deploy-staging:
    name: Deploy staging
    needs:
      - validation
      - tag
      - build-front-artefact
      - build-back-artefact
    uses: ./.github/workflows/deploy-to-scalingo.yml
    with:
      environment: staging
      tag: "v${{ github.run_number }}"
      isPreRelease: true
      slackChannel: "#if-staging-déploiement"
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy-pentest:
    name: Deploy pentest
    needs:
      - deploy-staging
    uses: ./.github/workflows/deploy-to-scalingo.yml
    with:
      environment: pentest
      tag: "v${{ github.run_number }}"
      isPreRelease: true
      slackChannel: "#if-pentest-notifications"
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy-prod:
    name: Deploy prod
    needs:
      - deploy-staging
    uses: ./.github/workflows/deploy-to-scalingo.yml
    with:
      environment: prod
      tag: "v${{ github.run_number }}"
      region: "osc-secnum-fr1"
      isPreRelease: false
      slackChannel: "#if-prod-déploiement"
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  
  deploy-dbt:
    name: Deploy DBT
    environment: prod
    needs:
      - deploy-prod
    uses: ./.github/workflows/deploy-dbt.yml
    with:
      tag: "v${{ github.run_number }}"
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}

  create-release:
    needs:
      - deploy-prod
    name: Create release
    uses: ./.github/workflows/generate-release.yml
    with:
      release_tag: "v${{ github.run_number }}"
      prerelease: false
