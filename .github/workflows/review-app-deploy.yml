name: "Deploy review app"

on:
  workflow_call:
    inputs:
      pull_request_id:
        type: number
        required: true
      run_number:
        type: string
        required: true
    secrets:
      SCALINGO_API_TOKEN:
        required: true

jobs:
  deploy:
    name: "Deploy to review app pr${{ inputs.pull_request_id }}"
    runs-on: ubuntu-latest
    environment: review-app
    concurrency:
      group: deploy-to-scalingo-pr${{ inputs.pull_request_id }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 10.9.0
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"
          cache: "pnpm"
      - name: Install scalingo CLI
        uses: ./.github/actions/install-scalingo-cli
      - name: Install dependencies
        run: pnpm install
      - name: Build front
        run: NODE_OPTIONS=--max-old-space-size=4096 pnpm front build-scalingo
      - name: Build back
        run: pnpm back build
      - name: Login to scalingo
        run: scalingo login --api-token ${{ secrets.SCALINGO_API_TOKEN }}
      - name: Create back review app
        run: |
          if scalingo --app if-dev-back review-apps | grep -q "pr${{ inputs.pull_request_id }}"; then
            echo "Review app for PR_ID ${{ inputs.pull_request_id }} already exists. Skipping creation."
          else
            echo "Review app for PR_ID ${{ inputs.pull_request_id }} does not exist. Creating now."
            scalingo --app if-dev-back integration-link-manual-review-app ${{ inputs.pull_request_id }}
            scalingo --app if-dev-back-pr${{ inputs.pull_request_id }} integration-link-update --no-auto-deploy
          fi
      - name: Create front review app
        run: |
          if scalingo --app if-dev-front review-apps | grep -q "pr${{ inputs.pull_request_id }}"; then
            echo "Review app for PR_ID ${{ inputs.pull_request_id }} already exists. Skipping creation."
          else
            echo "Review app for PR_ID ${{ inputs.pull_request_id }} does not exist. Creating now."
            scalingo --app if-dev-front integration-link-manual-review-app ${{ inputs.pull_request_id }}
            scalingo --app if-dev-front-pr${{ inputs.pull_request_id }} integration-link-update --no-auto-deploy
          fi
      - name: Wait for the postgresql to be ready
        run: sleep 60
      - name: Update domain env variable
        run: |
          scalingo --app if-dev-back-pr${{ inputs.pull_request_id }} env-set "DOMAIN=if-dev-front-pr${{ inputs.pull_request_id }}.osc-fr1.scalingo.io"
      - name: Remove sslmode from $SCALINGO_POSTGRESQL_URL
        run: |
          current_db_url=$(scalingo --app if-dev-back-pr${{ inputs.pull_request_id }} env | grep 'SCALINGO_POSTGRESQL_URL=' | cut -d '=' -f2-)
          new_db_url=$(echo $current_db_url | sed "s/?sslmode=prefer//")
          scalingo --app if-dev-back-pr${{ inputs.pull_request_id }} env-set "SCALINGO_POSTGRESQL_URL=$new_db_url"
      - name: Deploy back
        run: scalingo --app if-dev-back-pr${{ inputs.pull_request_id }} deploy back/back-build.tar.gz ${{ inputs.pull_request_id }}-${{ inputs.run_number }}
      - name: Deploy front
        run: scalingo --app if-dev-front-pr${{ inputs.pull_request_id }} deploy front/front-build.tar.gz ${{ inputs.pull_request_id }}-${{ inputs.run_number }}
