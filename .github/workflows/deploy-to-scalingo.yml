name: "Generic workflow to deploy to scalingo, given arguments"

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      tag:
        type: string
        required: true
      isPreRelease:
        required: true
        type: boolean
      region:
        required: false
        type: string
        default: "osc-fr1"
      slackChannel:
        type: string
        required: true
    secrets:
      SCALINGO_API_TOKEN:
        required: true
      DISCORD_WEBHOOK_URL:
        required: true
      SLACK_BOT_TOKEN:
        required: true

jobs:
  deploy:
    name: "Deploy to ${{ inputs.environment }}"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    concurrency:
      group: deploy-to-scalingo-${{ inputs.environment }}
      cancel-in-progress: true
    steps:
      - name: Install scalingo CLI
        run: |
          wget -qO- https://cli-dl.scalingo.com/install.sh | bash
          echo "$HOME/bin" >> $GITHUB_PATH
      - name: Download back artefact
        uses: actions/download-artifact@v4
        with:
          name: back-build-${{ inputs.tag }}
      - name: Download front artefact
        uses: actions/download-artifact@v4
        with:
          name: front-build-${{ inputs.tag }}
      - name: Login to scalingo
        run: scalingo login --api-token ${{ secrets.SCALINGO_API_TOKEN }}
      - name: Deploy back
        run: |
          # first attempt
          scalingo --app if-${{ inputs.environment }}-back --region ${{ inputs.region }} deploy back-build.tar.gz ${{ inputs.tag }} || deploy_failed=true
          
          # If first attempt fails, retry once
          if [ "$deploy_failed" = true ]; then
            echo "Back deployment failed! Retrying in 5 seconds..."
            sleep 5
            scalingo --app if-${{ inputs.environment }}-back --region ${{ inputs.region }} deploy back-build.tar.gz ${{ inputs.tag }}
          fi
      - name: Deploy front
        run: scalingo --app if-${{ inputs.environment }}-front --region ${{ inputs.region }} deploy front-build.tar.gz ${{ inputs.tag }}
      - name: Send Slack notification
        run: |
          releaseSuffix=$([[ "${{ inputs.isPreRelease }}" == "true" ]] && echo "-rc" || echo "")
          curl --location "https://slack.com/api/chat.postMessage" -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" -d @- <<EOF
          {
            "channel": "${{ inputs.slackChannel }}",
            "blocks": [
              {"type": "header", "text": {"type": "plain_text", "text": "${{ inputs.tag }}${releaseSuffix}"}},
              {"type": "section", "text": {"type": "plain_text", "text": "La version ${{ inputs.tag }}${releaseSuffix} est déployée en ${{ inputs.environment }}."}},
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "style": "primary",
                    "text": {
                      "type": "plain_text",
                      "text": "Voir les changements"
                    },
                    "url": "https://github.com/gip-inclusion/immersion-facile/releases/tag/${{ inputs.tag }}${releaseSuffix}"
                  }, {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Voir les releases"
                    },
                    "url": "https://github.com/gip-inclusion/immersion-facile/releases"
                  }, {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Aller sur l'application"
                    },
                    "url": "https://${{ inputs.environment }}.immersion-facile.beta.gouv.fr"
                  }, {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Voir le workfow github"
                    },
                    "url": "${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}"
                  }
                ]
              }
            ]
          }
          EOF
      - name: Send Discord notification
        run: |
          releaseSuffix=$([[ "${{ inputs.isPreRelease }}" == "true" ]] && echo "-rc" || echo "")
          curl -X POST -H "Content-Type: application/json" -d @- ${{ secrets.DISCORD_WEBHOOK_URL }} <<EOF 
          {
            "content": "La ${{ inputs.tag }} est deployée en ${{ inputs.environment }}.",
            "embeds": [
              {
                "title": "${{ inputs.tag }}${releaseSuffix}",
                "fields": [
                  {
                    "name": "Les changements contenus dans cette version :",
                    "value": "https://github.com/gip-inclusion/immersion-facile/releases/tag/${{ inputs.tag }}${releaseSuffix}"
                  },
                  {
                    "name": "Dernières releases :",
                    "value": "https://github.com/gip-inclusion/immersion-facile/releases"
                  },
                  {
                    "name": "Application :",
                    "value": "https://${{ inputs.environment }}.immersion-facile.beta.gouv.fr"
                  },
                  {
                    "name": "Pour passer au prochain environnement, validez ici",
                    "value": "${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}"
                  }
                ]
              }
            ]
          }
          EOF
