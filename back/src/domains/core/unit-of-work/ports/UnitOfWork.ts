import type { AgencyGroupRepository } from "../../../agency/ports/AgencyGroupRepository";
import type { AgencyRepository } from "../../../agency/ports/AgencyRepository";
import type { DelegationContactRepository } from "../../../agency/ports/DelegationContactRepository";
import type { AssessmentRepository } from "../../../convention/ports/AssessmentRepository";
import type { ConventionExternalIdRepository } from "../../../convention/ports/ConventionExternalIdRepository";
import type { ConventionQueries } from "../../../convention/ports/ConventionQueries";
import type { ConventionRepository } from "../../../convention/ports/ConventionRepository";
import type { ConventionsToSyncRepository } from "../../../convention/ports/ConventionsToSyncRepository";
import type { NpsRepository } from "../../../convention/ports/NpsRepository";
import type { DeletedEstablishmentRepository } from "../../../establishment/ports/DeletedEstablishmentRepository";
import type { DiscussionRepository } from "../../../establishment/ports/DiscussionRepository";
import type { EstablishmentAggregateRepository } from "../../../establishment/ports/EstablishmentAggregateRepository";
import type { EstablishmentLeadQueries } from "../../../establishment/ports/EstablishmentLeadQueries";
import type { EstablishmentLeadRepository } from "../../../establishment/ports/EstablishmentLeadRepository";
import type { GroupRepository } from "../../../establishment/ports/GroupRepository";
import type { SearchMadeRepository } from "../../../establishment/ports/SearchMadeRepository";
import type { EstablishmentMarketingRepository } from "../../../marketing/ports/EstablishmentMarketingRepository";
import type { ApiConsumerRepository } from "../../api-consumer/ports/ApiConsumerRepository";
import type { OngoingOAuthRepository } from "../../authentication/connected-user/port/OngoingOAuthRepositiory";
import type { UserRepository } from "../../authentication/connected-user/port/UserRepository";
import type { ConventionFranceTravailAdvisorRepository } from "../../authentication/ft-connect/port/ConventionFranceTravailAdvisorRepository";
import type { OutboxQueries } from "../../events/ports/OutboxQueries";
import type { OutboxRepository } from "../../events/ports/OutboxRepository";
import type { FeatureFlagQueries } from "../../feature-flags/ports/FeatureFlagQueries";
import type { FeatureFlagRepository } from "../../feature-flags/ports/FeatureFlagRepository";
import type { NafRepository } from "../../naf/port/NafRepository";
import type { NotificationRepository } from "../../notifications/ports/NotificationRepository";
import type { RomeRepository } from "../../rome/ports/RomeRepository";
import type { BroadcastFeedbacksRepository } from "../../saved-errors/ports/BroadcastFeedbacksRepository";
import type { ShortLinkQuery } from "../../short-link/ports/ShortLinkQuery";
import type { ShortLinkRepository } from "../../short-link/ports/ShortLinkRepository";
import type { StatisticQueries } from "../../statistics/ports/StatisticQueries";

export type UnitOfWork = {
  agencyGroupRepository: AgencyGroupRepository;
  agencyRepository: AgencyRepository;
  apiConsumerRepository: ApiConsumerRepository;
  assessmentRepository: AssessmentRepository;
  conventionExternalIdRepository: ConventionExternalIdRepository;
  conventionFranceTravailAdvisorRepository: ConventionFranceTravailAdvisorRepository;
  conventionQueries: ConventionQueries;
  conventionRepository: ConventionRepository;
  conventionsToSyncRepository: ConventionsToSyncRepository;
  delegationContactRepository: DelegationContactRepository;
  deletedEstablishmentRepository: DeletedEstablishmentRepository;
  discussionRepository: DiscussionRepository;
  broadcastFeedbacksRepository: BroadcastFeedbacksRepository;
  establishmentAggregateRepository: EstablishmentAggregateRepository;
  establishmentLeadQueries: EstablishmentLeadQueries;
  establishmentLeadRepository: EstablishmentLeadRepository;
  establishmentMarketingRepository: EstablishmentMarketingRepository;
  featureFlagRepository: FeatureFlagRepository;
  featureFlagQueries: FeatureFlagQueries;
  groupRepository: GroupRepository;
  nafRepository: NafRepository;
  notificationRepository: NotificationRepository;
  npsRepository: NpsRepository;
  ongoingOAuthRepository: OngoingOAuthRepository;
  outboxQueries: OutboxQueries;
  outboxRepository: OutboxRepository;
  romeRepository: RomeRepository;
  searchMadeRepository: SearchMadeRepository;
  shortLinkQuery: ShortLinkQuery;
  shortLinkRepository: ShortLinkRepository;
  statisticQueries: StatisticQueries;
  userRepository: UserRepository;
};

export type OutOfTransactionQueries = {
  convention: ConventionQueries;
  establishmentLead: EstablishmentLeadQueries;
  shortLink: ShortLinkQuery;
  featureFlag: FeatureFlagQueries;
  statistic: StatisticQueries;
};
