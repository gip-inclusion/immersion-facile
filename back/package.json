{
  "name": "back",
  "version": "1.0.0",
  "description": "",
  "scripts": {
    "build": "node ./transpile-back-and-prepare-for-prod.js",
    "db:create": "pnpm db:migrate create",
    "db:down": "pnpm db:migrate down",
    "db:migrate": "ts-node --compilerOptions '{\"resolveJsonModule\": true}' node_modules/node-pg-migrate/bin/node-pg-migrate -j ts -m src/config/pg/migrations",
    "db:up:bun": "bun node_modules/node-pg-migrate/bin/node-pg-migrate -m src/config/pg/migrations up",
    "db:down:bun": "bun node_modules/node-pg-migrate/bin/node-pg-migrate -m src/config/pg/migrations down",
    "db:redo:bun": "bun node_modules/node-pg-migrate/bin/node-pg-migrate -m src/config/pg/migrations redo",
    "db:redo": "pnpm db:migrate redo",
    "db:seed": "ts-node src/scripts/seed.ts",
    "db:seed:bun": "bun src/scripts/seed.ts",
    "db:up": "pnpm db:migrate up",
    "deadcode": "ts-prune --ignore 'src/config/pg/migrations'",
    "dev": "NODE_ENV=local ts-node-dev src/scripts/startServer.ts",
    "dev:no-typecheck": "NODE_ENV=local ts-node-dev --transpile-only src/scripts/startServer.ts",
    "free-quarantined-form-establishments-with-correct-siret": "ts-node src/scripts/freeQuarantinedFormEstablishmentsWithCorrectSiret.ts",
    "fullcheck": "pnpm -w fullcheck --filter=back",
    "generate-api-key": "ts-node src/scripts/generateApiKey.ts",
    "includecheck": "src/scripts/check_includes.sh",
    "mark-establishments-as-searchable-when-max-contacts-allows": "ts-node src/scripts/markEstablishmentsAsSearchableWhenMaxContactsAllows.ts",
    "migrate": "pnpm db:migrate",
    "check": "pnpm -w check:glob ./back/src",
    "start-prod": "NODE_ENV=production node -r ts-node/register --max-old-space-size=1536 src/scripts/startServer.ts",
    "start": "NODE_ENV=local node -r ts-node/register --max-old-space-size=1536 src/scripts/startServer.ts",
    "test:all": "jest --runInBand --testRegex='^((?!manual).)*.test.ts$'",
    "test:e2e": "jest --watchAll --testRegex=.e2e.test.ts",
    "test:integration": "jest --runInBand --testRegex=.integration.test.ts",
    "test:manual": "jest --runInBand --watchAll --testRegex=.manual.test.ts",
    "test:unit": "jest --watchAll --testRegex=.unit.test.ts",
    "test": "NODE_OPTIONS='--max_old_space_size=4096' jest --testRegex='^((?!(integration|manual)).)*.test.ts$'",
    "trigger-evening-jobs": "ts-node src/scripts/triggerEveningJobs.ts",
    "trigger-add-agencies-and-users": "ts-node src/scripts/triggerAddAgenciesAndUsers.ts",
    "trigger-convention-reminder": "ts-node src/scripts/triggerConventionReminder.ts",
    "trigger-contact-request-reminder-3d": "ts-node src/scripts/triggerContactRequestReminder3Days.ts",
    "trigger-contact-request-reminder-7d": "ts-node src/scripts/triggerContactRequestReminder7Days.ts",
    "trigger-contact-request-beneficiary-reminder-15d": "ts-node src/scripts/triggerContactRequestBeneficiaryReminder15Days.ts",
    "trigger-delete-email-attachements": "ts-node src/scripts/triggerDeleteEmailAttachements.ts",
    "trigger-establishment-leads-reminders": "ts-node src/scripts/triggerEstablishmentLeadReminders.ts",
    "trigger-mark-old-convention-as-deprecated": "ts-node src/scripts/triggerMarkOldConventionAsDeprecated.ts",
    "trigger-mark-obsolete-discussions-as-deprecated": "ts-node src/scripts/triggerMarkObsoleteDiscussionsAsDeprecated.ts",
    "trigger-delete-old-discussion-messages": "ts-node src/scripts/triggerDeleteOldDiscussionMessages",
    "trigger-refresh-materialized-views": "ts-node src/scripts/triggerRefreshMaterializedViews.ts",
    "trigger-resync-old-conventions-to-pe": "ts-node src/scripts/triggerResyncOldConventionsToPe.ts",
    "trigger-assessment-reminders": "ts-node src/scripts/triggerAssessmentReminder.ts",
    "trigger-assign-agency-viewer-role-to-users": "ts-node src/scripts/triggerAssignAgencyViewerRoleToUsers.ts",
    "trigger-sending-assessment-needed-notifications": "ts-node src/scripts/triggerSendAssessmentNeededNotifications.ts",
    "trigger-suggest-edit-form-establishment-every-6-months": "ts-node src/scripts/triggerSuggestEditFormEstablishmentEvery6Months.ts",
    "trigger-update-establishments-from-sirene": "ts-node src/scripts/triggerUpdateEstablishmentsFromSireneApiScript.ts",
    "trigger-update-all-establishments-scores": "ts-node src/scripts/triggerUpdateAllEstablishmentsScores.ts",
    "trigger-update-rome-data": "ts-node src/scripts/triggerUpdateRomeData.ts",
    "trigger-update-legacy-rome-v3": "ts-node src/scripts/triggerUpdateLegacyRomeV3.ts",
    "trigger-deactivate-unresponsive-establishments": "ts-node src/scripts/triggerDeactivateUnresponsiveEstablishments.ts",
    "typecheck": "tsc --noEmit",
    "kysely-codegen": "kysely-codegen --dialect postgres",
    "verify-migrations-order": "./src/scripts/verifyDatabaseMigrationsOrder.sh"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@sentry/node": "^9.6.1",
    "@sentry/profiling-node": "^9.6.1",
    "@types/geojson": "^7946.0.10",
    "aws-sdk": "^2.1213.0",
    "axios": "^1.12.2",
    "body-parser": "^1.20.3",
    "bottleneck": "^2.19.5",
    "date-fns": "2.28.0",
    "dotenv": "^16.0.0",
    "express": "^4.21.0",
    "express-ipfilter": "^1.3.2",
    "html-templates": "workspace:*",
    "jsonwebtoken": "^9.0.2",
    "kysely": "^0.27.4",
    "kysely-codegen": "^0.10.1",
    "multer": "^2.0.2",
    "nanoid": "^3.3.8",
    "node-pg-migrate": "^6.2.1",
    "pg": "^8.11.1",
    "pg-format": "^1.0.4",
    "pino": "^7.9.1",
    "pino-http": "^6.6.0",
    "pino-pretty": "^7.5.4",
    "querystring": "^0.2.1",
    "ramda": "^0.30.1",
    "redis": "^4.7.0",
    "shared": "workspace:*",
    "shared-routes": "^0.10.3",
    "ts-node": "^10.9.2",
    "ts-pattern": "5.7.0",
    "uuid": "^8.3.2",
    "zod": "4.0.17",
    "zod-to-json-schema": "^3.21.4"
  },
  "devDependencies": {
    "@babel/core": "^7.28.0",
    "@babel/preset-env": "^7.28.0",
    "@babel/preset-typescript": "^7.27.1",
    "@faker-js/faker": "^8.3.1",
    "@types/body-parser": "^1.19.2",
    "@types/express": "^4.17.17",
    "@types/http-errors": "^2.0.4",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/multer": "^1.4.7",
    "@types/node": "^22.14.0",
    "@types/node-fetch": "^2.6.11",
    "@types/papaparse": "^5.3.7",
    "@types/pg": "^8.10.2",
    "@types/pg-format": "^1.0.2",
    "@types/pino": "^7.0.4",
    "@types/pino-http": "^5.8.1",
    "@types/ramda": "^0.30.2",
    "@types/request": "^2.48.8",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "^8.3.4",
    "axios-mock-adapter": "^1.21.2",
    "babel-jest": "^29.7.0",
    "extract-zip": "^2.0.1",
    "jest": "^29.7.0",
    "libphonenumber-js": "^1.11.1",
    "openapi-types": "^12.1.3",
    "papaparse": "^5.3.2",
    "supertest": "^6.3.4",
    "ts-node-dev": "^2.0.0",
    "ts-prune": "^0.10.3",
    "typescript": "^5.8.3"
  }
}
